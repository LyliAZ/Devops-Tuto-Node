name: npm
description: An action to create an npm package and push it to artifactory

inputs:
  npm_repo:
    required: true
  npm_email:
    required: true
  npm_secret:
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: setup npm
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        shell: bash
        run: npm list
        
    - name: Install dependencies
      shell: bash
      run: npm install
      
    - name: log into the npm registery
      env:
        ARTIFACTORY_EMAIL: ${{ inputs.npm_email }}
        ARTIFACTORY_PASSWORD: ${{ inputs.npm_secret }}
        ARTIFACTORY_URL: ${{ inputs.npm_repo }}
      shell : bash
      run: 
        |
        echo "email = $ARTIFACTORY_EMAIL
              always-auth = true
              registry=https://$ARTIFACTORY_URL
              //$ARTIFACTORY_URL:_authToken=$ARTIFACTORY_PASSWORD" > ~/.npmrc 
            
    - name: publish to artifactory
      env:
        ARTIFACTORY_URL: ${{ inputs.npm_repo }}
      shell : bash
      run: npm publish --registry https://$ARTIFACTORY_URL
